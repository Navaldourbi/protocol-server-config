protocol:
  search_bus:
    mapping:
      - beckn_key: context.bap_id
        value: session.bap_id
      - beckn_key: context.bap_uri
        value: session.bap_uri
      - beckn_key: context.location.country.code
        value: session.country
      - beckn_key: context.location.city.code
        value: session.cityCode
      - beckn_key: context.transaction_id
        value: session.currentTransactionId
      - beckn_key: context.message_id
        value: messageId
      - beckn_key: context.timestamp
        value: timestamp
      - beckn_key: context.domain
        value: session.domain
      - beckn_key: context.version
        value: session.version
      - beckn_key: context.ttl
        value: session.ttl
      - beckn_key: context.action
        value: action

      - beckn_key: message.intent.fulfillment.stops[0].type
        value: startPoint
      - beckn_key: message.intent.fulfillment.stops[0].location.descriptor.code
        value: session.cityCode
      - beckn_key: message.intent.fulfillment.vehicle.category
        value: data.vehicleCategaory || session.vehicleCategaory
      - beckn_key: message.intent.payment.tags
        value: data.paymentTagsSearch
        compute: buildTags(data.paymentTagsSearch)

  search_station:
    sessionData:
      - beckn_key: currentTransactionId
        value: newTranscationId
      - beckn_key: transactionIds
        value: "[...session.transactionIds, newTranscationId]"

    mapping:
      - beckn_key: context.bap_id
        value: session.bap_id
      - beckn_key: context.bap_uri
        value: session.bap_uri
      - beckn_key: context.bpp_id
        value: session.bpp_id
      - beckn_key: context.bpp_uri
        value: session.bpp_uri
      - beckn_key: context.location.country.code
        value: session.country
      - beckn_key: context.location.city.code
        value: session.cityCode
      - beckn_key: context.transaction_id
        value: session.currentTransactionId
      - beckn_key: context.message_id
        value: messageId
      - beckn_key: context.timestamp
        value: timestamp
      - beckn_key: context.domain
        value: session.domain
      - beckn_key: context.version
        value: session.version
      - beckn_key: context.ttl
        value: session.ttl
      - beckn_key: context.action
        value: action

      - beckn_key: message.intent.fulfillment.stops[0].type
        value: startPoint
        check: data?.startStop
      - beckn_key: message.intent.fulfillment.stops[0].location.descriptor.code
        value: data?.startStop
      - beckn_key: message.intent.fulfillment.stops[1].type
        value: endPoint
        check: data?.endStop
      - beckn_key: message.intent.fulfillment.stops[1].location.descriptor.code
        value: data?.endStop

      - beckn_key: message.intent.fulfillment.vehicle.category
        value: data.vehicleCategaory || session.vehicleCategaory
      - beckn_key: message.intent.payment.tags
        value: data.paymentTags || session.paymentTagsSearch
        compute: buildTags(data.paymentTags || session.paymentTagsSearch)

  search_service:
    sessionData:
      - beckn_key: currentTransactionId
        value: newTranscationId
      - beckn_key: transactionIds
        value: "[...session.transactionIds, newTranscationId]"

    mapping:
      - beckn_key: context.bap_id
        value: session.bap_id
      - beckn_key: context.bap_uri
        value: session.bap_uri
      - beckn_key: context.bpp_id
        value: session.bpp_id
      - beckn_key: context.bpp_uri
        value: session.bpp_uri
      - beckn_key: context.location.country.code
        value: session.country
      - beckn_key: context.location.city.code
        value: session.cityCode
      - beckn_key: context.transaction_id
        value: session.currentTransactionId
      - beckn_key: context.message_id
        value: messageId
      - beckn_key: context.timestamp
        value: timestamp
      - beckn_key: context.domain
        value: session.domain
      - beckn_key: context.version
        value: session.version
      - beckn_key: context.ttl
        value: session.ttl
      - beckn_key: context.action
        value: action

      - beckn_key: message.intent.fulfillment.id
        value: data.fulfillmentId

      - beckn_key: message.intent.fulfillment.stops[0].type
        value: data.startStopType
      - beckn_key: message.intent.fulfillment.stops[0].id
        value: data?.startStop
      - beckn_key: message.intent.fulfillment.stops[1].type
        value: data.endStopType
      - beckn_key: message.intent.fulfillment.stops[1].id
        value: data?.endStop

      - beckn_key: message.intent.provider.id
        value: data.providerId

      - beckn_key: message.intent.payment.tags
        value: data.paymentTagsSearchService || session.paymentTagsSearch
        compute: buildTags(data.paymentTagsSearchService || session.paymentTagsSearch)

  select:
    mapping:
      - beckn_key: context.bap_id
        value: session.bap_id
      - beckn_key: context.bap_uri
        value: session.bap_uri
      - beckn_key: context.bpp_id
        value: session.bpp_id
      - beckn_key: context.bpp_uri
        value: session.bpp_uri
      - beckn_key: context.location.country.code
        value: session.country
      - beckn_key: context.location.city.code
        value: session.cityCode
      - beckn_key: context.transaction_id
        value: session.currentTransactionId
      - beckn_key: context.message_id
        value: messageId
      - beckn_key: context.timestamp
        value: timestamp
      - beckn_key: context.domain
        value: session.domain
      - beckn_key: context.version
        value: session.version
      - beckn_key: context.ttl
        value: session.ttl
      - beckn_key: context.action
        value: action

      - beckn_key: message.order.items[0].id
        value: data.itemId
      - beckn_key: message.order.items[0].quantity.selected.count
        value: parseInt(data.quantity)

      - beckn_key: message.order.fulfillments[0].id
        value: data.fulfillmentId

      - beckn_key: message.order.fulfillments[0].stops[0].type
        value: data.startStopType
      - beckn_key: message.order.fulfillments[0].stops[0].id
        value: data?.startStop
      - beckn_key: message.order.fulfillments[0].stops[1].type
        value: data.endStopType
      - beckn_key: message.order.fulfillments[0].stops[1].id
        value: data?.endStop

      - beckn_key: message.order.provider.id
        value: data.providerId

      - beckn_key: message.order.fulfillments[0].tags
        value: data.paymentTagsSearchService || session.paymentTagsSearch
        compute: buildTags(data.paymentTagsSearchService || session.paymentTagsSearch)

  init:
    mapping:
      - beckn_key: context.bap_id
        value: session.bap_id
      - beckn_key: context.bap_uri
        value: session.bap_uri
      - beckn_key: context.bpp_id
        value: session.bpp_id
      - beckn_key: context.bpp_uri
        value: session.bpp_uri
      - beckn_key: context.location.country.code
        value: session.country
      - beckn_key: context.location.city.code
        value: session.cityCode
      - beckn_key: context.transaction_id
        value: session.currentTransactionId
      - beckn_key: context.message_id
        value: messageId
      - beckn_key: context.timestamp
        value: timestamp
      - beckn_key: context.domain
        value: session.domain
      - beckn_key: context.version
        value: session.version
      - beckn_key: context.ttl
        value: session.ttl
      - beckn_key: context.action
        value: action

      - beckn_key: message.order.items[0].id
        value: data.itemId
      - beckn_key: message.order.items[0].quantity.selected.count
        value: parseInt(data.quantity)
      - beckn_key: message.order.provider.id
        value: data.providerId

      - beckn_key: message.order.fulfillments[0].id
        value: data.fulfillmentId

      - beckn_key: message.order.fulfillments[0].stops[0].type
        value: data.startStopType
      - beckn_key: message.order.fulfillments[0].stops[0].id
        value: data?.startStop
      - beckn_key: message.order.fulfillments[0].stops[1].type
        value: data.endStopType
      - beckn_key: message.order.fulfillments[0].stops[1].id
        value: data?.endStop
      - beckn_key: message.order.fulfillments[0].customer.person.name
        value: session.name
      - beckn_key: message.order.fulfillments[0].customer.person.age
        value: session.age
      - beckn_key: message.order.fulfillments[0].customer.person.gender
        value: session.gender
      - beckn_key: message.order.fulfillments[0].customer.contact.phone
        value: session.phone

      - beckn_key: message.order.billing.name
        value: session.name
      - beckn_key: message.order.billing.phone
        value: session.phone
      - beckn_key: message.order.billing.tax_id
        value: session.tax_id

      - beckn_key: message.order.provider.id
        value: data.providerId

      - beckn_key: message.order.payments[0].collected_by
        value: session.collected_by
      - beckn_key: message.order.payments[0].status
        value: data.paymentStatusInit
      - beckn_key: message.order.payments[0].type
        value: data.paymentTypeInit
      - beckn_key: message.order.payments[0].tags
        value: data.paymentTagsInit
        compute: buildTags(data.paymentTagsInit)

  confirm:
    mapping:
      - beckn_key: context.bap_id
        value: session.bap_id
      - beckn_key: context.bap_uri
        value: session.bap_uri
      - beckn_key: context.bpp_id
        value: session.bpp_id
      - beckn_key: context.bpp_uri
        value: session.bpp_uri
      - beckn_key: context.location.country.code
        value: session.country
      - beckn_key: context.location.city.code
        value: session.cityCode
      - beckn_key: context.transaction_id
        value: session.currentTransactionId
      - beckn_key: context.message_id
        value: messageId
      - beckn_key: context.timestamp
        value: timestamp
      - beckn_key: context.domain
        value: session.domain
      - beckn_key: context.version
        value: session.version
      - beckn_key: context.ttl
        value: session.ttl
      - beckn_key: context.action
        value: action

      - beckn_key: message.order.items[0].id
        value: session.itemId
      - beckn_key: message.order.items[0].quantity.selected.count
        value: session.quantitySelected
      - beckn_key: message.order.provider.id
        value: session.providerId

      - beckn_key: message.order.billing.name
        value: session.name
      - beckn_key: message.order.billing.email
        value: session.email
      - beckn_key: message.order.billing.phone
        value: session.phone

      - beckn_key: message.order.payments[0].collected_by
        value: session.collected_by
      - beckn_key: message.order.payments[0].status
        value: data.paymentStatusConfirm
      - beckn_key: message.order.payments[0].type
        value: data.paymentTypeConfirm
      - beckn_key: message.order.payments[0].params.transaction_id
        value: session.paymentID[0].id
      - beckn_key: message.order.payments[0].params.currency
        value: session.quoteCurrency
      - beckn_key: message.order.payments[0].params.amount
        value: session.quoteValue
      - beckn_key: message.order.payments[0].tags
        value: data.paymentTagsConfirm
        compute: buildTags(data.paymentTagsConfirm)

  on_search_bus:
    mapping:
      - business_key: "name"
        extractionPath: message.catalog.descriptor.name
      - business_key: "bpp_id"
        extractionPath: context.bpp_id
      - business_key: "bpp_uri"
        extractionPath: context.bpp_uri
      - business_key: "location"
        extractionPath: "message.catalog.providers[].fulfillments[].stops[]{locationName: location.descriptor.code}"
      - business_key: error
        extractionPath: error

  on_search_station:
    mapping:
      - business_key: "name"
        extractionPath: "message.catalog.descriptor.name"
      - business_key: "bpp_id"
        extractionPath: context.bpp_id
      - business_key: "bpp_uri"
        extractionPath: context.bpp_uri
      - business_key: "items"
        extractionPath: "message.catalog.providers[]{providerId: id}.fulfillments[]{fulfillmentId: id}.stops[]{stopId: id, type: type, locationName: location.descriptor.code}"
      - business_key: error
        extractionPath: error

  on_search_service:
    mapping:
      - business_key: "items"
        extractionPath: "message.catalog.providers[].items[]{id: id, price: price, name: descriptor.name}"

  on_select:
    mapping:
      - business_key: breakup
        extractionPath: "message.order.quote.breakup[]{type: title, totalPrice: price.value, UOP: price.currency}"
      - business_key: error
        extractionPath: error

  on_init:
    sessionData:
      - business_key: paymentID
        extractionPath: "message.order.payments[]{id: id}"
      - business_key: quoteCurrency
        extractionPath: "message.order.quote.price.currency"
      - business_key: quoteValue
        extractionPath: "message.order.quote.price.value"
    mapping:
      - business_key: paymentDetails
        extractionPath: "message.order.payments[]{id: id, type: type, status: status}"
      - business_key: error
        extractionPath: error

  on_confirm:
    mapping:
      - business_key: "orderId"
        extractionPath: message.order.id
      - business_key: "status"
        extractionPath: message.order.status
      - business_key: "QR code"
        extractionPath: "message.order.fulfillments[]{providerId: id}.stops[?(authorization)]{token: authorization.token, status: authorization.status}"
      - business_key: error
        extractionPath: error
